From 5c5379a65c0fb063d2162ade4c9c9b9761a1ed30 Mon Sep 17 00:00:00 2001
From: Felix Janda <felix.janda@posteo.de>
Date: Wed, 12 Apr 2017 21:29:11 -0400
Subject: [PATCH 2/5] Add wrapper for basename

basename comes in two variants. A GNU and a POSIX version. Currently,
the GNU version is mostly used, but this breaks compilation on systems
without glibc.

Switch to the portable version. Because this variant modifies its
argument, similarly to dirname, a wrapper is needed.
---
 src/core/osutils.cc | 10 ++++++++++
 src/core/osutils.h  |  1 +
 src/core/pci.cc     |  4 ++--
 src/core/sysfs.cc   |  8 ++++----
 4 files changed, 17 insertions(+), 6 deletions(-)

diff --git a/src/core/osutils.cc b/src/core/osutils.cc
index f023a46..b369f88 100644
--- a/src/core/osutils.cc
+++ b/src/core/osutils.cc
@@ -455,6 +455,16 @@ string dirname(const string & path)
   return result;
 }
 
+string basename(const string & path)
+{
+  size_t len = path.length();
+  char *buffer = new char[len + 1];
+  path.copy(buffer, len);
+  buffer[len] = '\0';
+  string result = basename(buffer);
+  delete[] buffer;
+  return result;
+}
 
 string spaces(unsigned int count, const string & space)
 {
diff --git a/src/core/osutils.h b/src/core/osutils.h
index 549258e..55f5548 100644
--- a/src/core/osutils.h
+++ b/src/core/osutils.h
@@ -15,6 +15,7 @@ bool samefile(const std::string & path1, const std::string & path2);
 std::string readlink(const std::string & path);
 std::string realpath(const std::string & path);
 std::string dirname(const std::string & path);
+std::string basename(const std::string & path);
 bool loadfile(const std::string & file, std::vector < std::string > &lines);
 
 size_t splitlines(const std::string & s,
diff --git a/src/core/pci.cc b/src/core/pci.cc
index 21b9033..e38b12c 100644
--- a/src/core/pci.cc
+++ b/src/core/pci.cc
@@ -1172,9 +1172,9 @@ bool scan_pci(hwNode & n)
           string drivername = readlink(string(devices[i]->d_name)+"/driver");
           string modulename = readlink(string(devices[i]->d_name)+"/driver/module");
 
-          device->setConfig("driver", basename(const_cast<char *>(drivername.c_str())));
+          device->setConfig("driver", basename(drivername));
           if(exists(modulename))
-            device->setConfig("module", basename(const_cast<char *>(modulename.c_str())));
+            device->setConfig("module", basename(modulename));
 
           if(exists(string(devices[i]->d_name)+"/rom"))
           {
diff --git a/src/core/sysfs.cc b/src/core/sysfs.cc
index 32d6564..e45e806 100644
--- a/src/core/sysfs.cc
+++ b/src/core/sysfs.cc
@@ -100,7 +100,7 @@ static string sysfs_getbustype(const string & path)
   {
     devname =
       string(fs.path + "/bus/") + string(namelist[i]->d_name) +
-      "/devices/" + basename(path.c_str());
+      "/devices/" + basename(path);
 
     if (samefile(devname, path))
       return string(namelist[i]->d_name);
@@ -151,7 +151,7 @@ static string sysfstobusinfo(const string & path)
 
   if (bustype == "virtio")
   {
-    string name = basename(path.c_str());
+    string name = basename(path);
     if (name.compare(0, 6, "virtio") == 0)
       return "virtio@" + name.substr(6);
     else
@@ -240,7 +240,7 @@ string entry::driver() const
   string driverlink = This->devpath + "/driver";
   if (!exists(driverlink))
     return "";
-  return basename(readlink(driverlink).c_str());
+  return basename(readlink(driverlink));
 }
 
 
@@ -328,7 +328,7 @@ string entry::name_in_class(const string & classname) const
 
 string entry::name() const
 {
-  return basename(This->devpath.c_str());
+  return basename(This->devpath);
 }
 
 
-- 
2.39.1

